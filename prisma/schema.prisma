generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  clerkUserId      String            @unique
  name             String
  email            String            @unique
  password         String?
  phone            String            @unique
  userImageUrl     String?
  address          String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  pets             Pet[] // User can own multiple pets
  adoptionRequests AdoptionRequest[] // User's adoption requests
}

model Pet {
  id                Int               @id @default(autoincrement())
  category          String
  breed             String?
  color             String?
  age               Int
  price             Int
  isNegotiable      Boolean
  petImageUrl       String?
  description       String
  vaccinationStatus PetStatus
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  ownerId           Int
  owner             User              @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  adoptionRequests  AdoptionRequest[]
}

model AdoptionRequest {
  id        Int            @id @default(autoincrement())
  petId     Int
  adopterId Int
  adoptedAt DateTime       @default(now())
  status    AdoptionStatus
  pet       Pet            @relation(fields: [petId], references: [id], onDelete: Cascade)
  adopter   User           @relation(fields: [adopterId], references: [id], onDelete: Cascade)
}

enum PetStatus {
  UPTODATE
  PARTIALVACCINATED
  NOTVACCINATED
}

enum AdoptionStatus {
  PENDING
  COMPLETED
  REJECTED
}
